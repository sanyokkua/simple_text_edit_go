// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	types "simple_text_editor/core/v3/types"

	mock "github.com/stretchr/testify/mock"
)

// IEventSender is an autogenerated mock type for the IEventSender type
type IEventSender struct {
	mock.Mock
}

// SendErrorEvent provides a mock function with given fields: message, optionalErrs
func (_m *IEventSender) SendErrorEvent(message string, optionalErrs ...error) {
	_va := make([]interface{}, len(optionalErrs))
	for _i := range optionalErrs {
		_va[_i] = optionalErrs[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, message)
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// SendNotificationEvent provides a mock function with given fields: destination, optionalData
func (_m *IEventSender) SendNotificationEvent(destination types.Destination, optionalData ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, destination)
	_ca = append(_ca, optionalData...)
	_m.Called(_ca...)
}

// SendWarnEvent provides a mock function with given fields: message, optionalErrs
func (_m *IEventSender) SendWarnEvent(message string, optionalErrs ...error) {
	_va := make([]interface{}, len(optionalErrs))
	for _i := range optionalErrs {
		_va[_i] = optionalErrs[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, message)
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

type mockConstructorTestingTNewIEventSender interface {
	mock.TestingT
	Cleanup(func())
}

// NewIEventSender creates a new instance of IEventSender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIEventSender(t mockConstructorTestingTNewIEventSender) *IEventSender {
	mock := &IEventSender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
